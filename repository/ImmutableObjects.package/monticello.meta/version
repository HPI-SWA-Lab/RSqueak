(name 'ImmutableObjects-jc.19' message 'categorization' id 'b1f5d5d1-596c-47e3-b0b2-74fd4fb4c6b7' date '8 February 2017' time '4:33:54.634511 pm' author 'jc' ancestors ((name 'ImmutableObjects-jc.18' message 'create VectorNanoBenchmarkset reasonable defaultProblemSizefix typo (consWith:though: --> consWith:through:)' id 'a1d1f390-30d4-48bc-9eb3-5a26d0e5103d' date '5 January 2017' time '5:06:46.341336 pm' author 'jc' ancestors ((name 'ImmutableObjects-topa.17' message 'Don''t stress the stack so much on Cons creation' id 'd81df794-119a-4acd-ada5-d865419b49c1' date '4 January 2017' time '11:38:11.379491 am' author 'topa' ancestors ((name 'ImmutableObjects-topa.16' message 'Fix Prefixes' id '6183d9db-a7f8-4834-bc28-9589c7390f09' date '6 December 2016' time '4:56:05.576111 pm' author 'topa' ancestors ((name 'ImmutableObjects-topa.15' message 'Fix cons, add Benchmarks (needs benches package, pls split :))' id 'e256f0d3-ce70-4ba7-817d-efc361cb5df3' date '6 December 2016' time '4:53:43.81309 pm' author 'topa' ancestors ((name 'ImmutableObjects-topa.14' message 'Add Cons and Vector structures as example.need test uses' id 'c80b2f19-4a6e-47da-b404-9067c1dfd870' date '5 December 2016' time '5:46:47.275156 pm' author 'topa' ancestors ((name 'ImmutableObjects-jc.13' message 'Fix ImmutableFixedObjectTest.ImmJustFixedPointersClass has instSpec 1 (non-indexable) and therefore Object>>at:put: failed.' id 'd4f4dae6-b9bb-41ec-b855-4b1d695ed2fb' date '1 December 2016' time '10:29:19.995254 am' author 'jc' ancestors ((name 'ImmutableObjects-fn.12' message 'Add ImmutableMixedObjectTest' id 'a3f5337c-f68a-4344-b932-e3e17040c3dc' date '28 November 2016' time '8:57:52.96228 pm' author 'fn' ancestors ((name 'ImmutableObjects-fn.11' message 'Add ImmutableBytesObjectTest and ImmutableWordsObjectTest, also fix existing tests' id '96973e4d-2875-4556-a2a8-8092ecc5ccbf' date '28 November 2016' time '8:42:11.025442 pm' author 'fn' ancestors ((name 'ImmutableObjects-topa.10' message 'test immutable object creation from not-same-class objects' id 'd36f3a69-a35d-45a9-aeb2-4d6eacee5b41' date '28 November 2016' time '4:29:31.097749 pm' author 'topa' ancestors ((name 'ImmutableObjects-topa.9' message 'Extend tests a little' id '5d3468ba-9ef0-4ed6-8270-3641ed77a52f' date '28 November 2016' time '4:22:15.120739 pm' author 'topa' ancestors ((name 'ImmutableObjects-topa.8' message 'Naming, consistency, and coding style (+idioms)' id '972cf1d6-a080-4cdc-9150-add6bf15b531' date '28 November 2016' time '3:32:21.382314 pm' author 'topa' ancestors ((name 'ImmutableObjects-jc.7' message 'Introduce Behavior>>immutableFrom:' id 'e23b7e19-1965-4fed-a136-7ac3cf98ff23' date '28 November 2016' time '1:16:32.931351 pm' author 'jc' ancestors ((name 'ImmutableObjects-fn.6' message 'Introduce Object>>asImmutable:' id '59d77511-df73-4012-99ab-f3e8a011b5f1' date '28 November 2016' time '11:26:11.454812 am' author 'fn' ancestors ((name 'ImmutableObjects-fn.5' message 'Add Behavior>>allImmutableInstances' id 'df54e420-4021-4280-ad99-f856e90d9936' date '28 November 2016' time '1:46:49.974355 am' author 'fn' ancestors ((name 'ImmutableObjects-fn.4' message 'New implementation via immutableCopy' id 'e35dfa12-ad91-43a2-90c0-b071cee29c34' date '28 November 2016' time '12:58:22.32651 am' author 'fn' ancestors ((name 'ImmutableObjects-fn.3' message 'Switch to array implementation' id '130935ab-6103-44b0-95cc-099debbf67dd' date '21 November 2016' time '10:54:07.640112 am' author 'fn' ancestors ((name 'ImmutableObjects-fn.2' message 'Second iteration' id 'c95aad86-2f9d-40a4-a9e2-21e53b8a4db1' date '20 November 2016' time '9:34:56.770639 pm' author 'fn' ancestors ((name 'ImmutableObjects-fn.1' message 'Initial commit' id '36f98fa2-d002-4283-84c8-6943276b0865' date '20 November 2016' time '7:05:00.438521 pm' author 'fn' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())